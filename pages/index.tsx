import Head from "next/head";
import { Router, useRouter } from "next/router";
import { useState } from "react";
import { Header } from "../components/header/Header";
import { Button } from "../components/ui/Button";
import { Input } from "../components/ui/Input";

interface dataModel {
  from: string;
  to: string;
  distance: string;
  unit: string;
}
export interface DBModel {
  EVA_NR: string;
  DS100: string;
  IFOPT: string;
  NAME: string;
  Verkehr: string;
  Laenge: string;
  Breite: string;
  Betreiber_Name: string;
  Betreiber_Nr: string;
  Status: string;
}

const baseUrl = `${process.env.NEXT_PUBLIC_BASE_URL}`;

export default function Home() {

  const [searchOriginData, setSearchOriginData] = useState<DBModel[] | null>()
  const [searchDestinationData, setSearchDestinationData] = useState<DBModel[] | null>()
  const [data, setData] = useState<dataModel>();

  const [origin, setOrigin] = useState<string | null>("")
  const [originTemp, setOriginTemp] = useState<string>("")

  const [destination, setDestination] = useState<string | null>("")
  const [destinationTemp, setDestinationTemp] = useState<string>("")

  const router = useRouter();

  const handleSubmit = async (e: any) => {
    e.preventDefault()

    const response = await fetch(`${baseUrl}/v1/distance/${origin}/${destination}`);
    const mydata = await response.json()
    if (response.ok) {
      setData(mydata);

    }
  }

  const handleOriginInput = async (e: any) => {
    e.preventDefault()

    const response = await fetch(`${baseUrl}/search/${originTemp}`);
    const data = await response.json()
    if (response.ok) {
      setSearchOriginData(data)
    }
  }

  const handleDestinationInput = async (e: any) => {
    e.preventDefault()

    const response = await fetch(`${baseUrl}/search/${destinationTemp}`);
    const data = await response.json()
    if (response.ok) {
      setSearchDestinationData(data)
    }
  }


  const handleReset = () => {
    router.reload();


  }


  return (
    <div className="">
      <Head>
        <title>Distanz-Rechner</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className='flex flex-col justify-center items-center mt-20' >
        <div className=' flex flex-col max-w-screen-xl' >
          <div>
            <Input
              type="text"
              placeholder="Ort..."
              label="Von"
              onChange={(e) => { setOriginTemp(e.target.value) }}
              value={originTemp}
              onClick={handleOriginInput} />
            {searchOriginData && <ul className="bg-slate-200/60 px-2">{searchOriginData.map(item => (<li className={origin ? "hidden" : "block py-3 px-2 hover:scale-105 hover:bg-slate-200"} onClick={(e) => { setOriginTemp(item.NAME); setOrigin(item.DS100) }}>{item.NAME}</li>)
            )}</ul>}

            <Input
              type="text"
              placeholder="Ort..."
              label="Ziel"
              onClick={handleDestinationInput}
              onChange={(e) => { setDestinationTemp(e.target.value) }}
              value={destinationTemp}
            />
            {searchDestinationData && <ul className=" bg-slate-200/60 px-2">{searchDestinationData.map(item => (<li className={destination ? "hidden" : "block py-3 px-2 hover:scale-105 hover:bg-slate-200"} onClick={(e) => { setDestinationTemp(item.NAME); setDestination(item.DS100); }}>{item.NAME}</li>)
            )}</ul>}
          </div>
          <div>
            <Button onClick={handleSubmit}>Distanz Berechnen</Button>
            <Button onClick={handleReset}>Reset</Button>
          </div>

        </div>
        <div className="mt-10 border rounded-md"> {data && <div className="px-6 py-4">

          <p className="font-normal" >Von: <span className="font-normal" >{data.from}</span> </p>
          <p className="font-normal" > Ziel: <span className="font-normal">{data.to}</span> </p>
          < div >
            <h3 className="font-normal text-xl mt-2">Luftlinie </h3>
            <p className="font-normal"> Distanz: <span className="font-normal">{data.distance} </span></p>
            <p className="font-normal"> Einheit: <span className="font-normal">{data.unit}</span> </p>
          </div>

        </div>}
        </div >

      </div>




    </div>


  )
}
